name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      publish:
        description: "Publish to PyPI"
        required: false
        type: boolean
        default: false

env:
  PROJECT_NAME: "DXCam_CPP"

jobs:
  build:
    strategy:
      matrix:
        build_type: [ "Debug", "Release", "RelWithDebInfo" ]

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Ninja
        run: choco install ninja -y

      - name: Cache OpenCV
        id: cache-opencv
        uses: actions/cache@v4
        with:
          path: C:/Tools/opencv/build
          key: ${{ runner.os }}-opencv

      - name: Setup OpenCV
        if: steps.cache-opencv.outputs.cache-hit != 'true'
        run: choco install opencv -y

      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure CMake
        run: >-
          cmake
          -B ${{ github.workspace }}/build
          -G Ninja
          "-DCMAKE_C_COMPILER=cl.exe"
          "-DCMAKE_CXX_COMPILER=cl.exe"
          -DOpenCV_DIR=C:/Tools/opencv/build
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}

      - name: Install
        run: cmake --install ${{ github.workspace }}/build --config ${{ matrix.build_type }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-${{ matrix.build_type }}
          path: ${{ github.workspace }}/build/install

  build-wheels:
    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11", "3.12" ]

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Cache OpenCV
        id: cache-opencv
        uses: actions/cache@v4
        with:
          path: C:/Tools/opencv/build
          key: ${{ runner.os }}-opencv

      - name: Setup OpenCV
        if: steps.cache-opencv.outputs.cache-hit != 'true'
        run: choco install opencv -y

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install build tools
        run: pip install --upgrade setuptools wheel

      - name: Build Python Wheel
        run: pip wheel ${{ github.workspace }} --no-deps --wheel-dir=${{ github.workspace }}/dist
        env:
          CMAKE_ARGS: >-
            -DOpenCV_DIR=C:/Tools/opencv/build
            -DCMAKE_BUILD_PARALLEL_LEVEL=2

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-wheels-python${{ matrix.python-version }}
          path: ${{ github.workspace }}/dist/*.whl

  upload_pypi:
    needs: [ build-wheels ]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: (github.event_name == 'release' && github.event.action == 'published') || github.event.inputs.publish == 'true'

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: ${{ env.PROJECT_NAME }}-wheels-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
